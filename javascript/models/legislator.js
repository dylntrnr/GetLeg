// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  GetLeg.Models.Legislator = (function(_super) {

    __extends(Legislator, _super);

    function Legislator() {
      this.initialize = __bind(this.initialize, this);
      return Legislator.__super__.constructor.apply(this, arguments);
    }

    Legislator.prototype.initialize = function() {
      var address, geocoder,
        _this = this;
      geocoder = new google.maps.Geocoder();
      address = this.get('address');
      if (geocoder) {
        return geocoder.geocode({
          'address': address
        }, function(results, status) {
          if (status === google.maps.GeocoderStatus.OK) {
            _this.set({
              lat: results[0].geometry.location.Ya
            });
            _this.set({
              long: results[0].geometry.location.Za
            });
            return legislators.add(_this);
          } else {
            return console.log("Geocoder failed: " + status);
          }
        });
      }
    };

    return Legislator;

  })(Backbone.Model);

  GetLeg.Collections.LegislatorsCollection = (function(_super) {

    __extends(LegislatorsCollection, _super);

    function LegislatorsCollection() {
      return LegislatorsCollection.__super__.constructor.apply(this, arguments);
    }

    LegislatorsCollection.prototype.model = GetLeg.Models.Legislator;

    return LegislatorsCollection;

  })(Backbone.Collection);

}).call(this);
